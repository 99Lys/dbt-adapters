name: "Integration tests"

on:
    workflow_call:
        inputs:
            package:
                description: "Choose the package to test"
                type: string
                required: true
            branch:
                description: "Choose the branch to test"
                type: string
                default: "main"
            repository:
                description: "Choose the repository to test, when using a fork"
                type: string
                default: "dbt-labs/dbt-adapters"
            os:
                description: "Choose the OS to test against"
                type: string
                default: "ubuntu-22.04"
            python-version:
                description: "Choose the Python version to test against"
                type: string
                default: "3.9"
    workflow_dispatch:
        inputs:
            package:
                description: "Choose the package to test"
                type: choice
                options:
                -   "dbt-athena"
                -   "dbt-athena-community"
            branch:
                description: "Choose the branch to test"
                type: string
                default: "main"
            repository:
                description: "Choose the repository to test, when using a fork"
                type: string
                default: "dbt-labs/dbt-adapters"
            os:
                description: "Choose the OS to test against"
                type: string
                default: "ubuntu-22.04"
            python-version:
                description: "Choose the Python version to test against"
                type: choice
                options: ["3.9", "3.10", "3.11", "3.12"]

permissions:
    id-token: write
    contents: read

jobs:
    integration-tests-athena:
        if: ${{ inputs.package == 'dbt-athena' || inputs.package == 'dbt-athena-community' }}
        runs-on: ${{ inputs.os }}
        environment:
            name: "dbt-athena"
        steps:
        -   uses: actions/checkout@v4
            with:
                ref: ${{ inputs.branch }}
                repository: ${{ inputs.repository }}
        -   uses: actions/setup-python@v5
            with:
                python-version: ${{ inputs.python-version }}
        -   uses: pypa/hatch@install
        -   uses: aws-actions/configure-aws-credentials@v4
            with:
                role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.ASSUMABLE_ROLE_NAME }}
                aws-region: ${{ vars.DBT_TEST_ATHENA_REGION_NAME }}
        -   run: hatch run integration-tests
            working-directory: ./${{ inputs.package }}
